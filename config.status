#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by LibreOffice $as_me 26.2.0.0.alpha0+, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" config_host_lang.mk Makefile bin/bffvalidator.sh bin/odfvalidator.sh bin/officeotron.sh instsetoo_native/util/openoffice.lst sysui/desktop/macosx/Info.plist sysui/desktop/macosx/LaunchConstraint.plist hardened_runtime.xcent:sysui/desktop/macosx/hardened_runtime.xcent.in lo.xcent:sysui/desktop/macosx/lo.xcent.in extensions/source/macosx/quicklookpreview/appex/Info.plist extensions/source/macosx/quicklookthumbnail/appex/Info.plist config_host.mk vs-code.code-workspace.template:.vscode/vs-code-template.code-workspace.in"
config_headers=" config_host/config_probes.h config_host/config_atspi.h config_host/config_buildconfig.h config_host/config_buildid.h config_host/config_box2d.h config_host/config_clang.h config_host/config_cpdb.h config_host/config_crypto.h config_host/config_cups.h config_host/config_dconf.h config_host/config_eot.h config_host/config_extensions.h config_host/config_cairo_canvas.h config_host/config_cairo_rgba.h config_host/config_collab.h config_host/config_cxxabi.h config_host/config_dbus.h config_host/config_emscripten.h config_host/config_features.h config_host/config_feature_desktop.h config_host/config_feature_opencl.h config_host/config_firebird.h config_host/config_folders.h config_host/config_fonts.h config_host/config_fuzzers.h config_host/config_gio.h config_host/config_global.h config_host/config_gpgme.h config_host/config_java.h config_host/config_langs.h config_host/config_lgpl.h config_host/config_libcxx.h config_host/config_liblangtag.h config_host/config_locales.h config_host/config_mpl.h config_host/config_oox.h config_host/config_options.h config_host/config_options_calc.h config_host/config_zxing.h config_host/config_skia.h config_host/config_typesizes.h config_host/config_validation.h config_host/config_vendor.h config_host/config_vclplug.h config_host/config_version.h config_host/config_oauth2.h config_host/config_poppler.h config_host/config_python.h config_host/config_writerperfect.h config_host/config_wasm_strip.h solenv/lockfile/autoconf.h"
config_links=" include:include"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration links:
$config_links

Report bugs to the package provider.
LibreOffice home page: <http://documentfoundation.org/>."

ac_cs_config="'PYTHON=/opt/homebrew/bin/python3' '--srcdir=/Users/micahroberson/Desktop/restart/libreoffice' '--enable-option-checking=fatal'"
ac_cs_version="\
LibreOffice config.status 26.2.0.0.alpha0+
configured by ./configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/Users/micahroberson/Desktop/restart/libreoffice'
srcdir='.'
AWK='/usr/bin/awk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/sh './configure'  'PYTHON=/opt/homebrew/bin/python3' '--srcdir=/Users/micahroberson/Desktop/restart/libreoffice' '--enable-option-checking=fatal' $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
WSL_ONLY_AS_HELPER=
WSL_ONLY_AS_HELPER=


# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "config_host/config_probes.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_probes.h" ;;
    "include") CONFIG_LINKS="$CONFIG_LINKS include:include" ;;
    "config_host_lang.mk") CONFIG_FILES="$CONFIG_FILES config_host_lang.mk" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "bin/bffvalidator.sh") CONFIG_FILES="$CONFIG_FILES bin/bffvalidator.sh" ;;
    "bin/odfvalidator.sh") CONFIG_FILES="$CONFIG_FILES bin/odfvalidator.sh" ;;
    "bin/officeotron.sh") CONFIG_FILES="$CONFIG_FILES bin/officeotron.sh" ;;
    "instsetoo_native/util/openoffice.lst") CONFIG_FILES="$CONFIG_FILES instsetoo_native/util/openoffice.lst" ;;
    "sysui/desktop/macosx/Info.plist") CONFIG_FILES="$CONFIG_FILES sysui/desktop/macosx/Info.plist" ;;
    "sysui/desktop/macosx/LaunchConstraint.plist") CONFIG_FILES="$CONFIG_FILES sysui/desktop/macosx/LaunchConstraint.plist" ;;
    "hardened_runtime.xcent") CONFIG_FILES="$CONFIG_FILES hardened_runtime.xcent:sysui/desktop/macosx/hardened_runtime.xcent.in" ;;
    "lo.xcent") CONFIG_FILES="$CONFIG_FILES lo.xcent:sysui/desktop/macosx/lo.xcent.in" ;;
    "extensions/source/macosx/quicklookpreview/appex/Info.plist") CONFIG_FILES="$CONFIG_FILES extensions/source/macosx/quicklookpreview/appex/Info.plist" ;;
    "extensions/source/macosx/quicklookthumbnail/appex/Info.plist") CONFIG_FILES="$CONFIG_FILES extensions/source/macosx/quicklookthumbnail/appex/Info.plist" ;;
    "config_host.mk") CONFIG_FILES="$CONFIG_FILES config_host.mk" ;;
    "vs-code.code-workspace.template") CONFIG_FILES="$CONFIG_FILES vs-code.code-workspace.template:.vscode/vs-code-template.code-workspace.in" ;;
    "config_host/config_atspi.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_atspi.h" ;;
    "config_host/config_buildconfig.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_buildconfig.h" ;;
    "config_host/config_buildid.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_buildid.h" ;;
    "config_host/config_box2d.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_box2d.h" ;;
    "config_host/config_clang.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_clang.h" ;;
    "config_host/config_cpdb.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_cpdb.h" ;;
    "config_host/config_crypto.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_crypto.h" ;;
    "config_host/config_cups.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_cups.h" ;;
    "config_host/config_dconf.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_dconf.h" ;;
    "config_host/config_eot.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_eot.h" ;;
    "config_host/config_extensions.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_extensions.h" ;;
    "config_host/config_cairo_canvas.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_cairo_canvas.h" ;;
    "config_host/config_cairo_rgba.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_cairo_rgba.h" ;;
    "config_host/config_collab.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_collab.h" ;;
    "config_host/config_cxxabi.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_cxxabi.h" ;;
    "config_host/config_dbus.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_dbus.h" ;;
    "config_host/config_emscripten.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_emscripten.h" ;;
    "config_host/config_features.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_features.h" ;;
    "config_host/config_feature_desktop.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_feature_desktop.h" ;;
    "config_host/config_feature_opencl.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_feature_opencl.h" ;;
    "config_host/config_firebird.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_firebird.h" ;;
    "config_host/config_folders.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_folders.h" ;;
    "config_host/config_fonts.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_fonts.h" ;;
    "config_host/config_fuzzers.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_fuzzers.h" ;;
    "config_host/config_gio.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_gio.h" ;;
    "config_host/config_global.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_global.h" ;;
    "config_host/config_gpgme.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_gpgme.h" ;;
    "config_host/config_java.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_java.h" ;;
    "config_host/config_langs.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_langs.h" ;;
    "config_host/config_lgpl.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_lgpl.h" ;;
    "config_host/config_libcxx.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_libcxx.h" ;;
    "config_host/config_liblangtag.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_liblangtag.h" ;;
    "config_host/config_locales.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_locales.h" ;;
    "config_host/config_mpl.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_mpl.h" ;;
    "config_host/config_oox.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_oox.h" ;;
    "config_host/config_options.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_options.h" ;;
    "config_host/config_options_calc.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_options_calc.h" ;;
    "config_host/config_zxing.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_zxing.h" ;;
    "config_host/config_skia.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_skia.h" ;;
    "config_host/config_typesizes.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_typesizes.h" ;;
    "config_host/config_validation.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_validation.h" ;;
    "config_host/config_vendor.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_vendor.h" ;;
    "config_host/config_vclplug.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_vclplug.h" ;;
    "config_host/config_version.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_version.h" ;;
    "config_host/config_oauth2.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_oauth2.h" ;;
    "config_host/config_poppler.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_poppler.h" ;;
    "config_host/config_python.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_python.h" ;;
    "config_host/config_writerperfect.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_writerperfect.h" ;;
    "config_host/config_wasm_strip.h") CONFIG_HEADERS="$CONFIG_HEADERS config_host/config_wasm_strip.h" ;;
    "solenv/lockfile/autoconf.h") CONFIG_HEADERS="$CONFIG_HEADERS solenv/lockfile/autoconf.h" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_LINKS+set}" = set || CONFIG_LINKS=$config_links
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["LO_ELFCHECK_ALLOWLIST"]=""
S["x_LO_ELFCHECK_ALLOWLIST"]="#"
S["LO_PATH"]="/Users/micahroberson/Desktop/lode/opt/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin"
S["CYGWIN_BASH"]="C:/cygwin64/bin/bash.exe"
S["TEMP_DIRECTORY"]="/var/folders/p4/jb8qvdv152x4s2s5v2n4048w0000gn/T/"
S["SOLARINC"]=" -I/opt/homebrew/Cellar/openjdk@17/17.0.16/libexec/openjdk.jdk/Contents/Home/include  -I/opt/homebrew/Cellar/openjdk@17/17.0.16/libexec/openjdk.jdk/"\
"Contents/Home/include/darwin"
S["WIN_TOUCH"]=""
S["WIN_LS"]=""
S["WIN_GREP"]=""
S["SORT"]="sort"
S["FIND"]="find"
S["ATL_LIB"]=""
S["ATL_INCLUDE"]=""
S["JOM"]=""
S["KEEP_AWAKE_CMD"]=""
S["WITH_COREDUMPCTL"]=""
S["SYSTEMD_RUN"]=""
S["SYSTEMD_ESCAPE"]=""
S["JQ"]=""
S["COREDUMPCTL"]=""
S["ENABLE_FORMULA_LOGGER"]=""
S["LICENSE"]="LGPL"
S["MPL_SUBSET"]=""
S["ICECC_VERSION"]=""
S["x_ICECC_VERSION"]="#"
S["ICECREAM_RUN"]=""
S["MERGELIBS_MORE"]=""
S["MERGELIBS"]=""
S["ILIB_FOR_BUILD"]=""
S["ILIB"]=""
S["PARALLELISM"]="8"
S["DEPS_SYSINCLUDES"]=""
S["nodep"]=""
S["TESTINSTALLDIR"]="/Users/micahroberson/Desktop/restart/libreoffice/test-install"
S["INSTALLDIR"]="/usr/local/lib/libreoffice"
S["BINDIR"]="/usr/local/bin"
S["DOCDIR"]="/usr/local/share/doc/libreoffice"
S["MANDIR"]="/usr/local/share/man"
S["DATADIR"]="/usr/local/share"
S["LIBDIR"]="/usr/local/lib"
S["PREFIXDIR"]="/usr/local"
S["INSTALLDIRNAME"]="libreoffice"
S["WITH_COMPAT_OOWRAPPERS"]=""
S["ANDROID_PACKAGE_NAME"]=""
S["OOO_VENDOR"]="micahroberson"
S["PROGRESSTEXTBASELINE"]=""
S["PROGRESSTEXTCOLOR"]=""
S["PROGRESSFRAMECOLOR"]=""
S["PROGRESSPOSITION"]=""
S["PROGRESSSIZE"]=""
S["PROGRESSBARCOLOR"]=""
S["DEFAULT_BRAND_IMAGES"]="intro.png intro-highres.png logo.svg logo_inverted.svg logo-sc.svg logo-sc_inverted.svg about.svg"
S["CUSTOM_BRAND_IMAGES"]=""
S["CUSTOM_BRAND_DIR"]=""
S["BRAND_INTRO_IMAGES"]="intro.png intro-highres.png"
S["GIT_LINK_SRC"]=""
S["GIT_REFERENCE_SRC"]=""
S["WITH_LOCALES"]=""
S["WITH_POOR_HELP_LOCALIZATIONS"]=""
S["GIT_NEEDED_SUBMODULES"]=""
S["WITH_LANG_LIST"]="en-US"
S["WITH_LANG"]=""
S["ALL_LANGS"]="en-US ab af am ar as ast be bg bn bn-IN bo br brx bs ca ca-valencia ckb cs cy da de dgo dsb dz el en-GB en-ZA eo es et eu fa fi fr fur fy ga gd gl g"\
"u gug he hi hr hsb hu hy id is it ja ka kab kk km kmr-Latn kn ko kok ks lb lo lt lv mai mk ml mn mni mr my nb ne nl nn nr nso oc om or pa-IN pl pt p"\
"t-BR ro ru rw sa-IN sat sat-Olck sd si sid sk sl sq sr sr-Latn ss st sun sv sw-TZ szl ta te tg th tl tn tr ts tt ug uk uz ve vec vi xh zh-CN zh-TW z"\
"u qtz"
S["MSGUNIQ"]=""
S["MSGFMT"]=""
S["SHA256SUM"]="shasum -a 256"
S["CURL"]="/usr/bin/curl"
S["WGET"]="wget"
S["SCPDEFS"]=" -DWITH_POSTGRESQL_SDBC -DWITH_FIREBIRD_SDBC -DWITHOUT_EXTENSION_MEDIAWIKI -DWITH_EXTENSION_INTEGRATION -DENABLE_EXTENSION_UPDATE"
S["HAMCREST_JAR"]=""
S["OOO_JUNIT_JAR"]="/Users/micahroberson/Desktop/lode/opt/share/java/junit.jar"
S["ANT_LIB"]="/Users/micahroberson/Desktop/lode/opt/ant/lib"
S["ANT_HOME"]="/Users/micahroberson/Desktop/lode/opt/ant"
S["ANT"]="/Users/micahroberson/Desktop/lode/opt/ant/bin/ant"
S["JVM_ONE_PATH_CHECK"]=""
S["SYSTEM_LIBWEBP"]=""
S["ENABLE_LIBWEBP"]="TRUE"
S["LIBWEBP_LIBS"]=""
S["LIBWEBP_CFLAGS"]=""
S["SYSTEM_LIBTIFF"]=""
S["ENABLE_LIBTIFF"]="TRUE"
S["LIBTIFF_LIBS"]=""
S["LIBTIFF_CFLAGS"]=""
S["SYSTEM_LIBPNG"]=""
S["ENABLE_LIBPNG"]="TRUE"
S["LIBPNG_LIBS"]="-L$(gb_StaticLibrary_WORKDIR) -llibpng"
S["LIBPNG_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/libpng"
S["SYSTEM_LIBLANGTAG"]=""
S["LIBLANGTAG_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/liblangtag/liblangtag/.libs -llangtag"
S["LIBLANGTAG_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/liblangtag"
S["ENABLE_MSVC_ANALYZE"]=""
S["ENABLE_AVAHI"]=""
S["AVAHI_LIBS"]=""
S["AVAHI_CFLAGS"]=""
S["SYSTEM_CAIRO"]=""
S["ENABLE_CAIRO_CANVAS"]=""
S["CAIRO_LIBS"]=""
S["CAIRO_CFLAGS"]=""
S["ENABLE_CAIRO_RGBA"]=""
S["XINERAMA_LINK"]="none"
S["ENABLE_WIX"]=""
S["ENABLE_SILENT_MSI"]=""
S["ENABLE_EXTENSION_UPDATE"]="TRUE"
S["BZIP2_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/bzip2 -lbz2"
S["BZIP2_CFLAGS"]=""
S["SYSTEM_BZIP2"]=""
S["PRIVACY_POLICY_URL"]="undefined"
S["ONLINEUPDATE_MAR_CERTIFICATEPATH"]=""
S["ONLINEUPDATE_MAR_CERTIFICATENAME"]=""
S["ONLINEUPDATE_MAR_CERTIFICATEDER"]=""
S["ONLINEUPDATE_MAR_BASEURL"]=""
S["ENABLE_ONLINE_UPDATE_MAR"]=""
S["ENABLE_ONLINE_UPDATE"]=""
S["WITH_DOCREPAIR_FONTS"]=""
S["WITH_FONTS"]="TRUE"
S["FONTFORGE"]=""
S["NLPSOLVER_EXTENSION_PACK"]=""
S["WITH_EXTRA_EXTENSIONS"]=""
S["WITH_EXTENSION_INTEGRATION"]="TRUE"
S["WITH_THEMES"]="breeze breeze_dark breeze_dark_svg breeze_svg colibre colibre_svg colibre_dark colibre_dark_svg elementary elementary_svg karasa_jaga karasa_jaga_sv"\
"g sifr sifr_svg sifr_dark sifr_dark_svg sukapura sukapura_dark sukapura_dark_svg sukapura_svg"
S["ENABLE_EVOAB2"]=""
S["GOBJECT_LIBS"]=""
S["GOBJECT_CFLAGS"]=""
S["KF6_LIBS"]=""
S["KF6_CFLAGS"]=""
S["KF5_LIBS"]=""
S["KF5_CFLAGS"]=""
S["KF5_CONFIG"]="kf5-config"
S["ENABLE_QT6_MULTIMEDIA"]=""
S["QT6_PLATFORMS_SRCDIR"]=""
S["QT6_LIBS"]=""
S["QT6_CFLAGS"]=""
S["MOC6"]=""
S["QT6_XCB_LIBS"]=""
S["QT6_XCB_CFLAGS"]=""
S["QMAKE6"]=""
S["QT5_PLATFORMS_SRCDIR"]=""
S["QT5_HAVE_GOBJECT"]=""
S["QT5_LIBS"]=""
S["QT5_CFLAGS"]=""
S["QT5_GOBJECT_LIBS"]=""
S["QT5_GOBJECT_CFLAGS"]=""
S["MOC5"]=""
S["QT5_XCB_LIBS"]=""
S["QT5_XCB_CFLAGS"]=""
S["QMAKE5"]=""
S["RHINO_JAR"]=""
S["SYSTEM_RHINO"]=""
S["ENABLE_SCRIPTING_JAVASCRIPT"]="TRUE"
S["BSH_JAR"]=""
S["SYSTEM_BSH"]=""
S["ENABLE_SCRIPTING_BEANSHELL"]="TRUE"
S["LIBSERIALIZER_JAR"]=""
S["LIBFONTS_JAR"]=""
S["LIBREPOSITORY_JAR"]=""
S["LIBFORMULA_JAR"]=""
S["LIBLOADER_JAR"]=""
S["LIBLAYOUT_JAR"]=""
S["LIBBASE_JAR"]=""
S["JFREEREPORT_JAR"]=""
S["FLUTE_JAR"]=""
S["LIBXML_JAR"]=""
S["SAC_JAR"]=""
S["SYSTEM_JFREEREPORT"]=""
S["ENABLE_REPORTBUILDER"]="TRUE"
S["ENABLE_MEDIAWIKI"]=""
S["JAVA_WEBSOCKET_JAR"]=""
S["SYSTEM_JAVA_WEBSOCKET"]=""
S["ENABLE_JAVA_WEBSOCKET"]="TRUE"
S["GPGMEPP_LIBS"]=""
S["GPGMEPP_CFLAGS"]=""
S["LIBASSUAN_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/libassuan/src/.libs -lassuan"
S["LIBASSUAN_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/libassuan/src"
S["GPG_ERROR_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/libgpg-error/src/.libs -lgpg-error"
S["GPG_ERROR_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/libgpg-error/src"
S["SYSTEM_GPGMEPP"]=""
S["ENABLE_GPGMEPP"]="TRUE"
S["GPGCONF"]=""
S["GPG"]=""
S["HAVE_LO_CLANG_DLLEXPORTINLINES"]=""
S["CLANG_USE_LD"]=""
S["LO_CLANG_VERSION"]=""
S["LO_CLANG_SHOWINCLUDES_PREFIX"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_FMA"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_F16C"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_AVX512F"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_AVX512"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_AVX2"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_AVX"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_SSE42"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_SSE41"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_SSSE3"]=""
S["LO_CLANG_CXXFLAGS_INTRINSICS_SSE2"]=""
S["LO_CLANG_CXX"]=""
S["LO_CLANG_CC"]=""
S["ENABLE_SKIA_DEBUG"]=""
S["ENABLE_SKIA"]="TRUE"
S["SKIA_GPU"]="METAL"
S["SYSTEM_POPPLER"]=""
S["ENABLE_PDFIMPORT"]="TRUE"
S["POPPLER_LIBS"]=""
S["POPPLER_CFLAGS"]=""
S["ENABLE_POPPLER"]="TRUE"
S["SYSTEM_ABSEIL"]=""
S["SYSTEM_OPENJPEG2"]="FALSE"
S["ABSEIL_LIBS"]=""
S["ABSEIL_CFLAGS"]=""
S["OPENJPEG2_LIBS"]=""
S["OPENJPEG2_CFLAGS"]=""
S["ENABLE_PDFIUM"]="TRUE"
S["ENABLE_DCONF"]=""
S["DCONF_LIBS"]=""
S["DCONF_CFLAGS"]=""
S["ENABLE_OPENGL_CANVAS"]="TRUE"
S["ENABLE_OPENGL_TRANSITIONS"]="TRUE"
S["ENABLE_GSTREAMER_1_0"]=""
S["GSTREAMER_1_0_LIBS"]=""
S["GSTREAMER_1_0_CFLAGS"]=""
S["SPLIT_OPT_FEATURES"]=""
S["SPLIT_APP_MODULES"]=""
S["ENABLE_GIO"]=""
S["GIO_LIBS"]=""
S["GIO_CFLAGS"]=""
S["SYSTEM_BLUEZ"]=""
S["SDREMOTE_ENTITLEMENT"]="	<key>com.apple.security.network.server</key>\n"\
"	<true/>"
S["ENABLE_SDREMOTE_BLUETOOTH"]=""
S["ENABLE_SDREMOTE"]="TRUE"
S["DBUS_HAVE_GLIB"]=""
S["ENABLE_DBUS"]=""
S["DBUS_GLIB_LIBS"]=""
S["DBUS_GLIB_CFLAGS"]=""
S["DBUS_LIBS"]=""
S["DBUS_CFLAGS"]=""
S["ENABLE_ATSPI_TESTS"]=""
S["ATSPI2_2_32_LIBS"]=""
S["ATSPI2_2_32_CFLAGS"]=""
S["ATSPI2_LIBS"]=""
S["ATSPI2_CFLAGS"]=""
S["DBUS_LAUNCH"]=""
S["XVFB_RUN"]=""
S["INTROSPECTION_MAKEFILE"]=""
S["INTROSPECTION_LIBS"]=""
S["INTROSPECTION_CFLAGS"]=""
S["INTROSPECTION_TYPELIBDIR"]=""
S["INTROSPECTION_GIRDIR"]=""
S["INTROSPECTION_GENERATE"]=""
S["INTROSPECTION_COMPILER"]=""
S["INTROSPECTION_SCANNER"]=""
S["GTK4_LIBS"]=""
S["GTK4_CFLAGS"]=""
S["ENABLE_GTKTILEDVIEWER"]=""
S["GTK3_LIBS"]=""
S["GTK3_CFLAGS"]=""
S["VCL_PLUGIN_INFO"]=" osx"
S["ENABLE_QT6"]=""
S["ENABLE_QT5"]=""
S["ENABLE_KF6"]=""
S["ENABLE_KF5"]=""
S["ENABLE_GTK4"]=""
S["ENABLE_GTK3_KDE5"]=""
S["ENABLE_GTK3"]=""
S["ENABLE_GEN"]=""
S["SYSTEM_EPOXY"]=""
S["ENABLE_EPOXY"]="TRUE"
S["EPOXY_LIBS"]=""
S["EPOXY_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/epoxy/include"
S["TOUCH"]="/usr/bin/touch"
S["UNZIP"]="/usr/bin/unzip"
S["ZIP"]="/usr/bin/zip"
S["ML_EXE"]=""
S["x_GNUCP"]="#"
S["GNUPATCH"]="/usr/bin/patch"
S["GNUCP"]=""
S["PATCH"]="/usr/bin/patch"
S["UNIQ"]="/usr/bin/uniq"
S["DIFF"]="/usr/bin/diff"
S["FLEX"]="/Users/micahroberson/Desktop/lode/opt/bin/flex"
S["BISON"]="/usr/bin/bison"
S["UUIDGEN"]="/usr/bin/uuidgen"
S["SYSTEM_LIBNUMBERTEXT_DATA"]=""
S["SYSTEM_LIBNUMBERTEXT"]=""
S["ENABLE_LIBNUMBERTEXT"]="TRUE"
S["LIBNUMBERTEXT_LIBS"]=""
S["LIBNUMBERTEXT_CFLAGS"]=""
S["SYSTEM_LIBEXTTEXTCAT_DATA"]=""
S["SYSTEM_LIBEXTTEXTCAT"]=""
S["ENABLE_LIBEXTTEXTCAT"]="TRUE"
S["LIBEXTTEXTCAT_LIBS"]=""
S["LIBEXTTEXTCAT_CFLAGS"]=""
S["SYSTEM_LPSOLVE"]=""
S["ENABLE_LPSOLVE"]="TRUE"
S["SYSTEM_COINMP"]=""
S["ENABLE_COINMP"]="TRUE"
S["COINMP_LIBS"]=""
S["COINMP_CFLAGS"]=""
S["SYSTEM_MYTHES"]=""
S["MYTHES_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/mythes/.libs -lmythes-1.2"
S["MYTHES_CFLAGS"]=""
S["HYPHEN_LIB"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/hyphen/.libs -lhyphen"
S["SYSTEM_HYPH"]=""
S["BOX2D_LIBS"]=""
S["BOX2D_CFLAGS"]=""
S["SYSTEM_BOX2D"]=""
S["ZXING_LIBS"]=""
S["ZXING_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/zxing/core/src"
S["ENABLE_ZXING"]="TRUE"
S["SYSTEM_ZXING"]=""
S["HAVE_ZXING_TOSVG"]=""
S["SYSTEM_ZXCVBN"]=""
S["SYSTEM_HUNSPELL"]=""
S["HUNSPELL_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/hunspell/src/hunspell/.libs -lhunspell-1.7"
S["HUNSPELL_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/hunspell/src/hunspell"
S["REDLAND_MAJOR"]="0"
S["RASQAL_MAJOR"]="3"
S["RAPTOR_MAJOR"]="0"
S["SYSTEM_REDLAND"]=""
S["ENABLE_REDLAND"]="TRUE"
S["REDLAND_LIBS"]=""
S["REDLAND_CFLAGS"]=""
S["SYSTEM_ARGON2"]=""
S["ENABLE_ARGON2"]="TRUE"
S["ARGON2_LIBS"]="/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/argon2/libargon2.a"
S["ARGON2_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/argon2/include"
S["ENABLE_CIPHER_OPENSSL_BACKEND"]=""
S["SYSTEM_OPENSSL"]=""
S["ENABLE_OPENSSL"]="TRUE"
S["OPENSSL_LIBS"]=""
S["OPENSSL_CFLAGS"]=""
S["DISABLE_NAN_TESTS"]=""
S["DISABLE_CVE_TESTS"]=""
S["WITH_WEBDAV"]="TRUE"
S["ENABLE_RANDR"]=""
S["XRANDR_LIBS"]=""
S["XRANDR_CFLAGS"]=""
S["XRENDER_LIBS"]=""
S["XRENDER_CFLAGS"]=""
S["X_EXTRA_LIBS"]=""
S["X_LIBS"]=""
S["X_PRE_LIBS"]=""
S["X_CFLAGS"]=""
S["XMKMF"]=""
S["x_NINJA"]=""
S["NINJA"]="ninja"
S["MESON"]="$(call gb_ExternalExecutable_get_command,python) /opt/homebrew/bin/meson"
S["SYSTEM_HARFBUZZ"]=""
S["ENABLE_HARFBUZZ"]="TRUE"
S["HARFBUZZ_LIBS"]="-L$(gb_UnpackedTarball_workdir)/harfbuzz/builddir/src/ -lharfbuzz $(GRAPHITE_LIBS)"
S["HARFBUZZ_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/harfbuzz/src"
S["SYSTEM_GRAPHITE"]=""
S["ENABLE_GRAPHITE"]="TRUE"
S["GRAPHITE_LIBS"]="-L$(gb_StaticLibrary_WORKDIR) -lgraphite"
S["GRAPHITE_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/graphite/include -DGRAPHITE2_STATIC"
S["SYSTEM_LIBORCUS"]=""
S["BOOST_SYSTEM_LIB"]=""
S["SYSTEM_ORCUS"]=""
S["ENABLE_ORCUS"]="TRUE"
S["ORCUS_LIBS"]=""
S["ORCUS_CFLAGS"]=""
S["DEFAULT_CRASHDUMP_VALUE"]="true"
S["ENABLE_BREAKPAD"]=""
S["BREAKPAD_SYMBOL_CONFIG"]=""
S["ICU_MINOR"]="1"
S["ICU_MAJOR"]="77"
S["SYSTEM_GENCMN"]=""
S["SYSTEM_GENCCODE"]=""
S["SYSTEM_GENBRK"]=""
S["SYSTEM_ICU"]=""
S["ENABLE_ICU"]="TRUE"
S["ICU_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/icu/source/lib -licuuc"
S["ICU_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/icu/source/i18n -I/Users/micahroberson/Desktop/restart/libreoffice/workdi"\
"r/UnpackedTarball/icu/source/common"
S["TLS"]="NSS"
S["SYSTEM_OPENLDAP"]=""
S["ENABLE_LDAP"]="TRUE"
S["SYSTEM_NSS"]=""
S["ENABLE_NSS"]="TRUE"
S["NSS_LIBS"]=""
S["NSS_CFLAGS"]=""
S["SYSTEM_ODBC_HEADERS"]=""
S["SYSTEM_GLM"]=""
S["GLM_CFLAGS"]="-isystem /Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/glm"
S["LIBFIXMATH_LIBS"]=""
S["SYSTEM_LIBFIXMATH"]=""
S["FROZEN_CFLAGS"]=""
S["SYSTEM_FROZEN"]=""
S["DRAGONBOX_CFLAGS"]=""
S["SYSTEM_DRAGONBOX"]=""
S["SYSTEM_MDDS"]=""
S["ENABLE_MDDS"]="TRUE"
S["MDDS_LIBS"]=""
S["MDDS_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/mdds/include"
S["SYSTEM_BOOST"]=""
S["BOOST_LOCALE_LIB"]=""
S["BOOST_IOSTREAMS_LIB"]=""
S["BOOST_FILESYSTEM_LIB"]=""
S["BOOST_DATE_TIME_LIB"]=""
S["BOOST_LDFLAGS"]=""
S["BOOST_CPPFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/external/boost/include -I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball"\
"/boost"
S["SYSTEM_CURL"]=""
S["ENABLE_CURL"]="TRUE"
S["CURL_LIBS"]=""
S["CURL_CFLAGS"]=""
S["LIBTOMMATH_LIBS"]="-ltommath"
S["LIBTOMMATH_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/libtommath"
S["SYSTEM_LIBTOMMATH"]=""
S["SYSTEM_FIREBIRD"]=""
S["ENABLE_FIREBIRD_SDBC"]="TRUE"
S["SYSTEM_LIBATOMIC_OPS"]=""
S["ENABLE_LIBATOMIC_OPS"]="TRUE"
S["LIBATOMIC_OPS_LIBS"]="-latomic_ops"
S["LIBATOMIC_OPS_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/libatomic_ops/include"
S["FIREBIRD_LIBS"]="-lfbclient"
S["FIREBIRD_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/firebird/gen/Release/firebird/include"
S["FIREBIRDCONFIG"]=""
S["POSTGRESQL_LIB"]=""
S["POSTGRESQL_INC"]="%OVERRIDE_ME%"
S["SYSTEM_POSTGRESQL"]=""
S["BUILD_POSTGRESQL_SDBC"]="TRUE"
S["KRB5_LIBS"]="-lcom_err  -lkrb5 "
S["GSSAPI_LIBS"]="-lgssapi_krb5 "
S["WITH_GSSAPI"]="TRUE"
S["WITH_KRB5"]="TRUE"
S["POSTGRESQL_LIBS"]=""
S["POSTGRESQL_CFLAGS"]=""
S["PGCONFIG"]=""
S["HSQLDB_JAR"]=""
S["SYSTEM_HSQLDB"]=""
S["BUNDLE_MARIADB_CONNECTOR_C"]=""
S["LIBMARIADB_PATH"]=""
S["LIBMARIADB"]=""
S["MARIADB_LIBS"]="-L$(gb_StaticLibrary_WORKDIR) -lmariadb-connector-c"
S["MARIADB_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/mariadb-connector-c/include"
S["SYSTEM_MARIADB_CONNECTOR_C"]=""
S["MARIADBCONFIG"]=""
S["MARIADBC_MICRO"]="2"
S["MARIADBC_MINOR"]="0"
S["MARIADBC_MAJOR"]="1"
S["ENABLE_MARIADBC"]="TRUE"
S["ENABLE_LIBRELOGO"]=""
S["PYTHON_VERSION_MINOR"]="12"
S["PYTHON_VERSION_MAJOR"]="3"
S["PYTHON_LIBS"]=""
S["PYTHON_FOR_BUILD"]="/opt/homebrew/bin/python3"
S["PYTHON_CFLAGS"]=""
S["SYSTEM_PYTHON"]=""
S["DISABLE_PYTHON"]=""
S["pkgpyexecdir"]=""
S["pyexecdir"]=""
S["pkgpythondir"]=""
S["pythondir"]=""
S["PYTHON_PLATFORM"]=""
S["PYTHON_EXEC_PREFIX"]=""
S["PYTHON_PREFIX"]=""
S["PYTHON_VERSION"]="3.12.11"
S["PYTHON"]="/opt/homebrew/bin/python3"
S["SYSTEM_LIBXML_FOR_BUILD"]="TRUE"
S["SYSTEM_LIBXML"]="TRUE"
S["XMLLINT"]="/usr/bin/xmllint"
S["LIBXML_LIBS"]="-lxml2 -lz -lpthread -liconv -lm"
S["LIBXML_CFLAGS"]="-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk/usr/include/libxml2"
S["SYSTEM_LIBXSLT_FOR_BUILD"]="TRUE"
S["SYSTEM_LIBXSLT"]="TRUE"
S["XSLTPROC"]="/usr/bin/xsltproc"
S["LIBEXSLT_LIBS"]="-lexslt -lxslt -lxml2 -lz -lpthread -liconv -lm"
S["LIBEXSLT_CFLAGS"]="-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk/usr/include/libxml2"
S["LIBXSLT_LIBS"]="-lxslt -lxml2 -lz -lpthread -liconv -lm"
S["LIBXSLT_CFLAGS"]="-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk/usr/include/libxml2"
S["SYSTEM_FREETYPE"]=""
S["ENABLE_FREETYPE"]=""
S["FREETYPE_LIBS"]=""
S["FREETYPE_CFLAGS"]=""
S["SYSTEM_CPPUNIT"]=""
S["ENABLE_CPPUNIT"]="TRUE"
S["CPPUNIT_LIBS"]=""
S["CPPUNIT_CFLAGS"]=""
S["SYSTEM_LCMS2"]=""
S["ENABLE_LCMS2"]="TRUE"
S["LCMS2_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/lcms2/src/.libs -llcms2"
S["LCMS2_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/lcms2/include -Wno-long-long"
S["SYSTEM_STAROFFICE"]=""
S["ENABLE_STAROFFICE"]="TRUE"
S["STAROFFICE_LIBS"]=""
S["STAROFFICE_CFLAGS"]=""
S["SYSTEM_ZMF"]=""
S["ENABLE_ZMF"]="TRUE"
S["ZMF_LIBS"]=""
S["ZMF_CFLAGS"]=""
S["SYSTEM_QXP"]=""
S["ENABLE_QXP"]="TRUE"
S["QXP_LIBS"]=""
S["QXP_CFLAGS"]=""
S["SYSTEM_PAGEMAKER"]=""
S["ENABLE_PAGEMAKER"]="TRUE"
S["PAGEMAKER_LIBS"]=""
S["PAGEMAKER_CFLAGS"]=""
S["SYSTEM_ABW"]=""
S["ENABLE_ABW"]="TRUE"
S["ABW_LIBS"]=""
S["ABW_CFLAGS"]=""
S["SYSTEM_EBOOK"]=""
S["ENABLE_EBOOK"]="TRUE"
S["EBOOK_LIBS"]=""
S["EBOOK_CFLAGS"]=""
S["SYSTEM_FREEHAND"]=""
S["ENABLE_FREEHAND"]="TRUE"
S["FREEHAND_LIBS"]=""
S["FREEHAND_CFLAGS"]=""
S["SYSTEM_ETONYEK"]=""
S["ENABLE_ETONYEK"]="TRUE"
S["ETONYEK_LIBS"]=""
S["ETONYEK_CFLAGS"]=""
S["SYSTEM_MWAW"]=""
S["ENABLE_MWAW"]="TRUE"
S["MWAW_LIBS"]=""
S["MWAW_CFLAGS"]=""
S["SYSTEM_MSPUB"]=""
S["ENABLE_MSPUB"]="TRUE"
S["MSPUB_LIBS"]=""
S["MSPUB_CFLAGS"]=""
S["SYSTEM_CDR"]=""
S["ENABLE_CDR"]="TRUE"
S["CDR_LIBS"]=""
S["CDR_CFLAGS"]=""
S["SYSTEM_VISIO"]=""
S["ENABLE_VISIO"]="TRUE"
S["VISIO_LIBS"]=""
S["VISIO_CFLAGS"]=""
S["SYSTEM_WPS"]=""
S["ENABLE_WPS"]="TRUE"
S["WPS_LIBS"]=""
S["WPS_CFLAGS"]=""
S["SYSTEM_WPG"]=""
S["ENABLE_WPG"]="TRUE"
S["WPG_LIBS"]=""
S["WPG_CFLAGS"]=""
S["SYSTEM_WPD"]=""
S["ENABLE_WPD"]="TRUE"
S["WPD_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/libwpd/src/lib/.libs -lwpd-0.10"
S["WPD_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/libwpd/inc"
S["SYSTEM_EPUBGEN"]=""
S["ENABLE_EPUBGEN"]="TRUE"
S["EPUBGEN_LIBS"]=""
S["EPUBGEN_CFLAGS"]=""
S["SYSTEM_ODFGEN"]=""
S["ENABLE_ODFGEN"]="TRUE"
S["ODFGEN_LIBS"]=""
S["ODFGEN_CFLAGS"]=""
S["SYSTEM_REVENGE"]=""
S["ENABLE_REVENGE"]="TRUE"
S["REVENGE_LIBS"]="-L/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/librevenge/src/lib/.libs -lrevenge-0.0"
S["REVENGE_CFLAGS"]="-I/Users/micahroberson/Desktop/restart/libreoffice/workdir/UnpackedTarball/librevenge/inc"
S["ENABLE_EOT"]="TRUE"
S["SYSTEM_LIBEOT"]=""
S["ENABLE_LIBEOT"]="TRUE"
S["LIBEOT_LIBS"]=""
S["LIBEOT_CFLAGS"]=""
S["SYSTEM_XMLSEC"]=""
S["ENABLE_XMLSEC"]="TRUE"
S["XMLSEC_LIBS"]=""
S["XMLSEC_CFLAGS"]=""
S["SYSTEM_EXPAT"]=""
S["ENABLE_EXPAT"]="TRUE"
S["EXPAT_LIBS"]=""
S["EXPAT_CFLAGS"]=""
S["SYSTEM_CLUCENE"]=""
S["ENABLE_CLUCENE"]="TRUE"
S["CLUCENE_LIBS"]=""
S["CLUCENE_CFLAGS"]=""
S["SYSTEM_LIBJPEG"]=""
S["LIBJPEG_LIBS"]=""
S["LIBJPEG_CFLAGS"]=""
S["NAFLAGS"]=""
S["NASM"]=""
S["MD4C_CFLAGS"]="-I${WORKDIR}/UnpackedTarball/md4c/src"
S["MD4C_LIBS"]=""
S["SYSTEM_MD4C"]=""
S["BUILD_TYPE"]="LibO DESKTOP AVMEDIA DBCONNECTIVITY SCRIPTING DYNLOADING EXTENSIONS NATIVE HELPTOOLS XMLHELP LIBCMIS ODFVALIDATOR OFFICEOTRON ZSTD MD4C LIBJPEG_TURB"\
"O CLUCENE EXPAT XMLSEC LIBEOT REVENGE ODFGEN EPUBGEN WPD WPG WPS VISIO CDR MSPUB MWAW ETONYEK FREEHAND EBOOK ABW PAGEMAKER QXP ZMF STAROFFICE LCMS2 "\
"CPPUNIT PYUNO PYTHON LIBRELOGO MARIADBC MARIADB_CONNECTOR_C HSQLDB POSTGRESQL LIBATOMIC_OPS LIBATOMIC_OPS LIBTOMMATH FIREBIRD CURL BOOST MDDS DRAGON"\
"BOX FROZEN GLM NSS OPENLDAP SANE ICU ORCUS GRAPHITE HARFBUZZ OPENSSL CRYPTO_NSS ARGON2 REDLAND HUNSPELL ZXCVBN ZXING BOX2D HYPHEN MYTHES COINMP LPSO"\
"LVE LIBEXTTEXTCAT LIBNUMBERTEXT EPOXY OPENCL PDFIUM POPPLER SKIA LIBGPGERROR LIBASSUAN GPGMEPP JAVA_WEBSOCKET JFREEREPORT REPORTBUILDER BSH RHINO OP"\
"ENSYMBOL MORE_FONTS BZIP2 LIBLANGTAG LIBPNG LIBTIFF LIBWEBP QADEVOOO"
S["ZSTD_CFLAGS"]="-I${WORKDIR}/UnpackedTarball/zstd/lib                  -I${WORKDIR}/UnpackedTarball/zstd/lib/common                  -I${WORKDIR}/UnpackedTarball/zs"\
"td/lib/decompress"
S["ZSTD_LIBS"]=""
S["SYSTEM_ZSTD"]=""
S["SYSTEM_ZLIB"]="TRUE"
S["ZLIB_LIBS"]="-lz"
S["ZLIB_CFLAGS"]=""
S["LIB_FUZZING_ENGINE"]=""
S["DOXYGEN"]=""
S["ENABLE_LWP"]="TRUE"
S["RPM"]=""
S["PKGMK"]=""
S["DPKG"]=""
S["EPM"]="NO"
S["BFFVALIDATOR"]=""
S["BFFVALIDATOR_EXE"]=""
S["WINE"]=""
S["OFFICEOTRON_JAR"]="8249374c274932a21846fa7629c2aa9b-officeotron-0.7.4-master.jar"
S["OFFICEOTRON"]="sh /Users/micahroberson/Desktop/restart/libreoffice/bin/officeotron.sh"
S["ODFVALIDATOR_JAR"]="odfvalidator-0.9.0-RC2-SNAPSHOT-jar-with-dependencies-2726ab578664434a545f8379a01a9faffac0ae73.jar"
S["ODFVALIDATOR"]="sh /Users/micahroberson/Desktop/restart/libreoffice/bin/odfvalidator.sh"
S["MODULAR_JAVA"]="TRUE"
S["JAVA_TARGET_VER"]="8"
S["JAVA_SOURCE_VER"]="8"
S["JDK_SECURITYMANAGER_DISALLOWED_FOR_BUILD"]=""
S["JDK_FOR_BUILD"]="sun"
S["JDK"]="sun"
S["JAVA_HOME_FOR_BUILD"]="/opt/homebrew/Cellar/openjdk@17/17.0.16/libexec/openjdk.jdk/Contents/Home"
S["JAVA_HOME"]="/opt/homebrew/Cellar/openjdk@17/17.0.16/libexec/openjdk.jdk/Contents/Home"
S["JAVAIFLAGS_FOR_BUILD"]="-Xmx64M"
S["JAVAIFLAGS"]="-Xmx64M"
S["JAVACFLAGS"]="-J-Xmx128M"
S["JAWTLIB"]=""
S["JAVADOCISGJDOC"]=""
S["JAVADOC"]="/opt/homebrew/Cellar/openjdk@17/17.0.16/libexec/openjdk.jdk/Contents/Home/bin/javadoc"
S["JAVACOMPILER"]="/opt/homebrew/Cellar/openjdk@17/17.0.16/libexec/openjdk.jdk/Contents/Home/bin/javac"
S["JAVAINTERPRETER"]="/opt/homebrew/Cellar/openjdk@17/17.0.16/libexec/openjdk.jdk/Contents/Home/bin/java"
S["MSM_PATH"]=""
S["JITC_PROCESSOR_TYPE"]=""
S["HAVE_POSIX_FALLOCATE"]="NO"
S["LD_PLUGIN"]=""
S["CLANGSYSINCLUDE"]=""
S["CLANGTOOLLIBS"]=""
S["CLANGLIBDIR"]=""
S["CLANGDIR"]=""
S["COMPILER_PLUGINS_TOOLING_ARGS"]=""
S["COMPILER_PLUGINS_DEBUG"]=""
S["COMPILER_PLUGINS_CXX_LINKFLAGS"]=""
S["COMPILER_PLUGINS_CXXFLAGS"]=""
S["COMPILER_PLUGINS_CXX"]=""
S["COMPILER_PLUGINS_ANALYZER_PCH"]="TRUE"
S["COMPILER_PLUGINS"]=""
S["COMPILER_PLUGINS_COM_IS_CLANG"]=""
S["LLVM_CONFIG"]=""
S["HAVE_GCC_FNO_ENFORCE_EH_SPECS"]=""
S["HAVE_ASM_END_BRANCH_INS_SUPPORT"]=""
S["CXXFLAGS_INTRINSICS_FMA"]=""
S["CXXFLAGS_INTRINSICS_F16C"]=""
S["CXXFLAGS_INTRINSICS_AVX512F"]=""
S["CXXFLAGS_INTRINSICS_AVX512"]=""
S["CXXFLAGS_INTRINSICS_AVX2"]=""
S["CXXFLAGS_INTRINSICS_AVX"]=""
S["CXXFLAGS_INTRINSICS_SSE42"]=""
S["CXXFLAGS_INTRINSICS_SSE41"]=""
S["CXXFLAGS_INTRINSICS_SSSE3"]=""
S["CXXFLAGS_INTRINSICS_SSE2"]=""
S["HAVE_DLLEXPORTINLINES"]=""
S["HAVE_BROKEN_GCC_WSTRINGOP_OVERFLOW"]=""
S["HAVE_BROKEN_GCC_WMAYBE_UNINITIALIZED"]=""
S["HAVE_WDEPRECATED_COPY_DTOR"]="TRUE"
S["HAVE_CXX20_ATOMIC_REF"]="TRUE"
S["HAVE_GCC_FNO_SIZED_DEALLOCATION"]="TRUE"
S["ATOMIC_LIB"]=""
S["CXXFLAGS_CXX11"]="-std=c++20"
S["SYSTEM_LIBCMIS"]=""
S["ENABLE_LIBCMIS"]="TRUE"
S["LIBCMIS_LIBS"]=""
S["LIBCMIS_CFLAGS"]=""
S["GPERF"]="/Users/micahroberson/Desktop/lode/opt/bin/gperf"
S["LIBCPP_DEBUG"]=""
S["HAVE_LIBCPP"]="TRUE"
S["HAVE_LIBSTDCPP"]=""
S["HARDENING_OPT_CFLAGS"]=" -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=2"
S["HARDENING_CFLAGS"]=" -grecord-gcc-switches -Wp,-D_GLIBCXX_ASSERTIONS"
S["HARDENING_LDFLAGS"]=""
S["HAVE_GCC_STACK_CLASH_PROTECTION"]=""
S["HAVE_GCC_BUILTIN_ATOMIC"]="TRUE"
S["HAVE_GCC_AVX"]=""
S["VALGRIND_CFLAGS"]=""
S["ENABLE_VALGRIND"]=""
S["ENABLE_RUNTIME_OPTIMIZATIONS"]="TRUE"
S["ENABLE_JUMBO_SHEETS"]="TRUE"
S["SIZEOF_SIZE_T"]="8"
S["LFS_CFLAGS"]=""
S["BOOST_CXXFLAGS"]=""
S["CXXCPP"]="/Users/micahroberson/Desktop/lode/opt/bin/ccache /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -tar"\
"get arm64-apple-macos -stdlib=libc++ -mmacosx-version-min=11.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Develo"\
"per/SDKs/MacOSX15.4.sdk  -E"
S["ac_ct_CXX"]=""
S["CXX"]="/Users/micahroberson/Desktop/lode/opt/bin/ccache /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -tar"\
"get arm64-apple-macos -stdlib=libc++ -mmacosx-version-min=11.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Develo"\
"per/SDKs/MacOSX15.4.sdk "
S["ENABLE_CLI"]=""
S["WINDOWS_SDK_WILANGID"]=""
S["WINDOWS_SDK_VERSION"]=""
S["WINDOWS_SDK_LIB_SUBDIR"]=""
S["WINDOWS_SDK_HOME"]=""
S["ac_ct_STRIP"]=""
S["STRIP"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip"
S["ac_ct_READELF"]=""
S["READELF"]=""
S["ac_ct_OBJDUMP"]="objdump"
S["OBJDUMP"]="objdump"
S["ac_ct_RANLIB"]=""
S["RANLIB"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib"
S["ac_ct_NM"]=""
S["NM"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm"
S["ac_ct_AR"]=""
S["AR"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar"
S["PKG_CONFIG_LIBDIR"]=""
S["PKG_CONFIG_PATH"]=""
S["PERL"]="/usr/bin/perl"
S["WITH_LINKER_HASH_STYLE"]=""
S["HAVE_LD_HASH_STYLE"]="FALSE"
S["PCH_DEBUGINFO"]=""
S["PCH_NO_CODEGEN"]=""
S["PCH_CODEGEN"]=""
S["BUILDING_PCH_WITH_OBJ"]=""
S["PCH_INSTANTIATE_TEMPLATES"]=""
S["CCACHE_BIN"]=""
S["ENABLE_PCH"]=""
S["THES_SYSTEM_DIR"]=""
S["HYPH_SYSTEM_DIR"]=""
S["DICT_SYSTEM_DIR"]=""
S["SYSTEM_DICTS"]=""
S["WITH_MYSPELL_DICTS"]=""
S["DO_FETCH_TARBALLS"]="TRUE"
S["TARFILE_LOCATION_NATIVE"]="/Users/micahroberson/Desktop/lode/ext_tar"
S["TARFILE_LOCATION"]="/Users/micahroberson/Desktop/lode/ext_tar"
S["SYSTEM_FONTCONFIG"]=""
S["ENABLE_FONTCONFIG"]=""
S["FONTCONFIG_LIBS"]=""
S["FONTCONFIG_CFLAGS"]=""
S["ENABLE_CUPS"]=""
S["ENABLE_CPDB"]=""
S["CPDB_LIBS"]=""
S["CPDB_CFLAGS"]=""
S["ENABLE_PAGEIN"]=""
S["ENABLE_OOENV"]=""
S["ASSERT_ALWAYS_ABORT"]="FALSE"
S["PYTHONWARNINGS"]="error"
S["ENABLE_WERROR"]="TRUE"
S["LOCKFILE"]=""
S["CPPU_ENV_FOR_BUILD"]="gcc3"
S["CXX_FOR_BUILD"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -target arm64-apple-macos -stdlib=libc++ -mmacosx-ver"\
"sion-min=11.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk"
S["CC_FOR_BUILD"]="/Users/micahroberson/Desktop/lode/opt/bin/ccache /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -targe"\
"t arm64-apple-macos -mmacosx-version-min=11.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15"\
".4.sdk"
S["WORKDIR_FOR_BUILD"]="/Users/micahroberson/Desktop/restart/libreoffice/workdir"
S["SDKDIRNAME_FOR_BUILD"]="LibreOfficeDev26.2_SDK"
S["LIBO_URE_MISC_FOLDER_FOR_BUILD"]="Resources/ure/share/misc"
S["LIBO_URE_LIB_FOLDER_FOR_BUILD"]="Frameworks"
S["LIBO_LIB_FOLDER_FOR_BUILD"]="Frameworks"
S["LIBO_BIN_FOLDER_FOR_BUILD"]="MacOS"
S["INSTROOT_FOR_BUILD"]="/Users/micahroberson/Desktop/restart/libreoffice/instdir/LibreOfficeDev.app/Contents"
S["INSTDIR_FOR_BUILD"]="/Users/micahroberson/Desktop/restart/libreoffice/instdir"
S["OS_FOR_BUILD"]="MACOSX"
S["HELP_ONLINE"]=""
S["HELP_OMINDEX_PAGE"]=""
S["ENABLE_HTMLHELP"]=""
S["PKGFORMAT"]=""
S["FAKEROOT"]=""
S["CPPU_ENV"]="gcc3"
S["WINDOWS_X64"]=""
S["PLATFORMID"]="macosx_aarch64"
S["WORKDIR"]="/Users/micahroberson/Desktop/restart/libreoffice/workdir"
S["P_SEP"]=":"
S["OS"]="MACOSX"
S["INSTROOTBASE"]="/Users/micahroberson/Desktop/restart/libreoffice/instdir/LibreOfficeDev.app"
S["INSTROOT"]="/Users/micahroberson/Desktop/restart/libreoffice/instdir/LibreOfficeDev.app/Contents"
S["INSTDIR"]="/Users/micahroberson/Desktop/restart/libreoffice/instdir"
S["USING_X11"]=""
S["EPM_FLAGS"]=""
S["RTL_ARCH"]="AARCH64"
S["RTL_OS"]="MacOSX"
S["CPUNAME"]="AARCH64"
S["COM"]="GCC"
S["DISABLE_GUI"]=""
S["DOTNET_ROOT"]=""
S["ENABLE_DOTNET"]=""
S["DOTNET"]=""
S["ENABLE_LASX"]="TRUE"
S["ENABLE_OPTIMIZED_DEBUG"]=""
S["ENABLE_OPTIMIZED"]="TRUE"
S["ENABLE_SYMBOLS_FOR"]=""
S["ENABLE_SAL_LOG"]=""
S["ENABLE_GDB_INDEX"]=""
S["HAVE_CLANG_DEBUG_INFO_KIND_CONSTRUCTOR"]="TRUE"
S["HAVE_EXTERNAL_DWARF"]=""
S["LD_GC_SECTIONS"]="-Wl,-dead_strip"
S["HAVE_LD_BSYMBOLIC_FUNCTIONS"]=""
S["LD"]=""
S["USE_LD"]=""
S["ENABLE_DEBUG"]=""
S["MSVC_USE_DEBUG_RUNTIME"]=""
S["ENABLE_DBGUTIL"]=""
S["GCC_VERSION"]=""
S["HAVE_GCC_GGDB2"]="TRUE"
S["SHOWINCLUDES_PREFIX"]=""
S["CLANG_16"]=""
S["COM_IS_CLANG"]="TRUE"
S["MSVC_CXX"]=""
S["DEVENV"]=""
S["VCTOOLSET"]=""
S["VCVER"]=""
S["CXX_X86_BINARY"]=""
S["CXX_X64_BINARY"]=""
S["UCRTVERSION"]=""
S["UCRTSDKDIR"]=""
S["ISYSTEM"]="-isystem "
S["ENABLE_EMSCRIPTEN_PROXY_POSIX_SOCKETS"]=""
S["ENABLE_EMSCRIPTEN_PROXY_TO_PTHREAD"]=""
S["ENABLE_EMSCRIPTEN_JSPI"]=""
S["ENABLE_WASM_STRIP_ACCESSIBILITY"]=""
S["ENABLE_WASM_STRIP_CALC"]=""
S["ENABLE_WASM_STRIP_BASIC_DRAW_MATH_IMPRESS"]=""
S["ENABLE_WASM_STRIP_WRITER"]=""
S["ENABLE_WASM_STRIP"]=""
S["CROSS_COMPILING"]=""
S["LIBO_URE_SHARE_JAVA_FOLDER"]="Resources/java"
S["LIBO_URE_MISC_FOLDER"]="Resources/ure/share/misc"
S["LIBO_URE_LIB_FOLDER"]="Frameworks"
S["LIBO_URE_ETC_FOLDER"]="Resources/ure/etc"
S["LIBO_URE_BIN_FOLDER"]="MacOS"
S["LIBO_SHARE_RESOURCE_FOLDER"]="Resources/resource"
S["LIBO_SHARE_READMES_FOLDER"]="Resources/readmes"
S["LIBO_SHARE_PRESETS_FOLDER"]="Resources/presets"
S["LIBO_SHARE_JAVA_FOLDER"]="Resources/java"
S["LIBO_SHARE_DOTNET_FOLDER"]="Resources/dotnet"
S["LIBO_SHARE_HELP_FOLDER"]="Resources/help"
S["LIBO_SHARE_FOLDER"]="Resources"
S["LIBO_LIB_PYUNO_FOLDER"]="Resources"
S["LIBO_LIB_FOLDER"]="Frameworks"
S["LIBO_ETC_FOLDER"]="Resources"
S["LIBO_BIN_FOLDER"]="MacOS"
S["MACOSX_XCODE_BUILD_VERSION"]="16E140"
S["MACOSX_SDK_BUILD_VERSION"]="24E241"
S["MACOSX_PROVISIONING_PROFILE"]=""
S["MACOSX_PROVISIONING_INFO"]=""
S["MACOSX_BUNDLE_IDENTIFIER"]="org.libreoffice.script"
S["ENABLE_MACOSX_SANDBOX"]=""
S["MACOSX_PACKAGE_SIGNING_IDENTITY"]=""
S["MACOSX_CODESIGNING_TEAM_IDENTIFIER"]=""
S["MACOSX_CODESIGNING_IDENTITY"]=""
S["LIBTOOL"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool"
S["INSTALL_NAME_TOOL"]="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/install_name_tool"
S["MAC_OS_X_VERSION_MIN_REQUIRED"]="110000"
S["MACOSX_DEPLOYMENT_TARGET"]="11.0"
S["MACOSX_SDK_PATH"]="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.4.sdk"
S["ENABLE_JAVA"]="TRUE"
S["COMPATH"]="/usr"
S["ENABLE_Z7_DEBUG"]="TRUE"
S["CCACHE_DEPEND_MODE"]="1"
S["CCACHE"]="/Users/micahroberson/Desktop/lode/opt/bin/ccache"
S["WITH_TEMPLATES"]="TRUE"
S["WITH_GALLERY_BUILD"]="TRUE"
S["SYSBASE"]=""
S["ENABLE_CUSTOMTARGET_COMPONENTS"]=""
S["DISABLE_DYNLOADING"]=""
S["STRIP_COMPONENTS"]="--strip-components"
S["GNUTAR"]="tar"
S["COMPRESSIONTOOL"]="/usr/bin/gzip"
S["BASH"]="/bin/sh"
S["AWK"]="/usr/bin/awk"
S["WINDOWS_BUILD_SIGNING"]="FALSE"
S["ENABLE_HARDENING_FLAGS"]=""
S["GET_TASK_ALLOW_ENTITLEMENT"]="<!-- We want to be able to debug a hardened process when not building for release --><key>com.apple.security.get-task-allow</key><true/>"
S["ENABLE_RELEASE_BUILD"]=""
S["USE_LIBRARY_BIN_TAR"]=""
S["WITH_YRS"]=""
S["CARGO"]=""
S["EMSCRIPTEN_WORKERJS"]=""
S["EMSCRIPTEN_EXTRA_SOFFICE_PRE_JS"]=""
S["EMSCRIPTEN_EXTRA_QTLOADER_CONFIG"]=""
S["EMSDK_FILE_PACKAGER"]=""
S["BACKTRACE_LIBS"]=""
S["BACKTRACE_CFLAGS"]=""
S["UNIX_DLAPI_LIBS"]=""
S["ENDIANNESS"]="little"
S["CPP"]="gcc -E"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]=""
S["CC"]="/Users/micahroberson/Desktop/lode/opt/bin/ccache /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -targe"\
"t arm64-apple-macos -mmacosx-version-min=11.0 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15"\
".4.sdk "
S["x_LDFLAGS"]="#"
S["x_OBJCXXFLAGS"]="#"
S["x_OBJCFLAGS"]="#"
S["x_CXXFLAGS"]="#"
S["x_CFLAGS"]="#"
S["x_AFLAGS"]="#"
S["LDFLAGS"]=""
S["OBJCXXFLAGS"]=""
S["OBJCFLAGS"]=""
S["CXXFLAGS"]=""
S["CFLAGS"]=""
S["AFLAGS"]=""
S["PTHREAD_LIBS"]=""
S["PTHREAD_CFLAGS"]=""
S["SDKDIRNAME"]="LibreOfficeDev26.2_SDK"
S["USE_HEADLESS_CODE"]=""
S["ENABLE_HEADLESS"]=""
S["HOST_PLATFORM"]="aarch64-apple-darwin24.4.0"
S["ENABLE_ANDROID_EDITING"]=""
S["ENABLE_ANDROID_LOK"]=""
S["ANDROID_SDK_DIR"]=""
S["ANDROID_TOOLCHAIN"]=""
S["ANDROID_SYSROOT_PLATFORM"]=""
S["ANDROID_APP_ABI"]=""
S["ANDROID_API_LEVEL"]=""
S["ANDROID_NDK_VERSION"]=""
S["ANDROID_NDK_DIR"]=""
S["ENABLE_GCOV"]=""
S["ENABLE_LTO"]=""
S["PKG_CONFIG"]="/Users/micahroberson/Desktop/lode/opt/bin/pkgconf"
S["SED"]="/usr/bin/sed"
S["x_Cygwin"]="#"
S["BUILDDIR"]="/Users/micahroberson/Desktop/restart/libreoffice"
S["SRC_ROOT"]="/Users/micahroberson/Desktop/restart/libreoffice"
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["PRODUCTVERSION"]="26.2"
S["MACOSX_BUNDLE_VERSION"]="26.2.0.0.alpha0"
S["MACOSX_BUNDLE_SHORTVERSION"]="26.2.0.0"
S["LIBO_VERSION_SUFFIX_SUFFIX"]="+"
S["LIBO_VERSION_SUFFIX"]=".alpha0"
S["LIBO_VERSION_PATCH"]="0"
S["LIBO_VERSION_MICRO"]="0"
S["LIBO_VERSION_MINOR"]="2"
S["LIBO_VERSION_MAJOR"]="26"
S["PRODUCTNAME_WITHOUT_SPACES"]="LibreOfficeDev"
S["PRODUCTNAME"]="LibreOfficeDev"
S["host_os"]="darwin24.4.0"
S["host_vendor"]="apple"
S["host_cpu"]="aarch64"
S["host"]="aarch64-apple-darwin24.4.0"
S["build_os"]="darwin24.4.0"
S["build_vendor"]="apple"
S["build_cpu"]="aarch64"
S["build"]="aarch64-apple-darwin24.4.0"
S["WSL"]=""
S["STRAWBERRY_PERL"]=""
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]=""
S["ECHO_T"]=""
S["ECHO_N"]=""
S["ECHO_C"]="\\c"
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/usr/local"
S["exec_prefix"]="/usr/local"
S["PACKAGE_URL"]="http://documentfoundation.org/"
S["PACKAGE_BUGREPORT"]=""
S["PACKAGE_STRING"]="LibreOffice 26.2.0.0.alpha0+"
S["PACKAGE_VERSION"]="26.2.0.0.alpha0+"
S["PACKAGE_TARNAME"]="libreoffice"
S["PACKAGE_NAME"]="LibreOffice"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"LibreOffice\""
D["PACKAGE_TARNAME"]=" \"libreoffice\""
D["PACKAGE_VERSION"]=" \"26.2.0.0.alpha0+\""
D["PACKAGE_STRING"]=" \"LibreOffice 26.2.0.0.alpha0+\""
D["PACKAGE_BUGREPORT"]=" \"\""
D["PACKAGE_URL"]=" \"http://documentfoundation.org/\""
D["LIBO_VERSION_MAJOR"]=" 26"
D["LIBO_VERSION_MINOR"]=" 2"
D["LIBO_VERSION_MICRO"]=" 0"
D["LIBO_VERSION_PATCH"]=" 0"
D["LIBO_THIS_YEAR"]=" 2025"
D["SRCDIR"]=" \"/Users/micahroberson/Desktop/restart/libreoffice\""
D["SRC_ROOT"]=" \"/Users/micahroberson/Desktop/restart/libreoffice\""
D["BUILDDIR"]=" \"/Users/micahroberson/Desktop/restart/libreoffice\""
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_DLAPI"]=" 1"
D["HAVE_UNIX_DLAPI"]=" 1"
D["HAVE_FEATURE_BACKTRACE"]=" 1"
D["HAVE_FEATURE_COMMUNITY_FLAVOR"]=" 1"
D["HAVE_FEATURE_DESKTOP"]=" 1"
D["HAVE_FEATURE_MULTIUSER_ENVIRONMENT"]=" 1"
D["HAVE_FEATURE_AVMEDIA"]=" 1"
D["HAVE_FEATURE_DBCONNECTIVITY"]=" 1"
D["HAVE_FEATURE_SCRIPTING"]=" 1"
D["HAVE_FEATURE_EXTENSIONS"]=" 1"
D["HAVE_FEATURE_JAVA"]=" 1"
D["HAVE_FEATURE_READONLY_INSTALLSET"]=" 1"
D["LIBO_BIN_FOLDER"]=" \"MacOS\""
D["LIBO_ETC_FOLDER"]=" \"Resources\""
D["LIBO_LIBEXEC_FOLDER"]=" \"MacOS\""
D["LIBO_LIB_FOLDER"]=" \"Frameworks\""
D["LIBO_LIB_PYUNO_FOLDER"]=" \"Resources\""
D["LIBO_SHARE_FOLDER"]=" \"Resources\""
D["LIBO_SHARE_HELP_FOLDER"]=" \"Resources/help\""
D["LIBO_SHARE_DOTNET_FOLDER"]=" \"Resources/dotnet\""
D["LIBO_SHARE_JAVA_FOLDER"]=" \"Resources/java\""
D["LIBO_SHARE_PRESETS_FOLDER"]=" \"Resources/presets\""
D["LIBO_SHARE_RESOURCE_FOLDER"]=" \"Resources/resource\""
D["LIBO_SHARE_SHELL_FOLDER"]=" \"Resources/shell\""
D["LIBO_URE_BIN_FOLDER"]=" \"MacOS\""
D["LIBO_URE_ETC_FOLDER"]=" \"Resources/ure/etc\""
D["LIBO_URE_LIB_FOLDER"]=" \"Frameworks\""
D["LIBO_URE_MISC_FOLDER"]=" \"Resources/ure/share/misc\""
D["LIBO_URE_SHARE_JAVA_FOLDER"]=" \"Resources/java\""
D["HAVE_FEATURE_UI"]=" 1"
D["SDKDIR"]=" \"/Users/micahroberson/Desktop/restart/libreoffice/instdir/LibreOfficeDev26.2_SDK\""
D["WORKDIR"]=" \"/Users/micahroberson/Desktop/restart/libreoffice/workdir\""
D["HAVE_FEATURE_XMLHELP"]=" 1"
D["HAVE_GETOPT_H"]=" 1"
D["HAVE_PATHS_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_UTIME"]=" 1"
D["HAVE_UTIMES"]=" 1"
D["HAVE_SYSLOG_H"]=" 1"
D["SIZEOF_LONG"]=" 8"
D["SIZEOF_SHORT"]=" 2"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_LONG_LONG"]=" 8"
D["SIZEOF_DOUBLE"]=" 8"
D["SIZEOF_VOIDP"]=" 8"
D["SIZEOF_SIZE_T"]=" 8"
D["ALIGNOF_SHORT"]=" 2"
D["ALIGNOF_INT"]=" 4"
D["ALIGNOF_LONG"]=" 8"
D["ALIGNOF_DOUBLE"]=" 8"
D["SAL_TYPES_SIZEOFSHORT"]=" 2"
D["SAL_TYPES_SIZEOFINT"]=" 4"
D["SAL_TYPES_SIZEOFLONG"]=" 8"
D["SAL_TYPES_SIZEOFLONGLONG"]=" 8"
D["SAL_TYPES_SIZEOFPOINTER"]=" 8"
D["SAL_TYPES_ALIGNMENT2"]=" 2"
D["SAL_TYPES_ALIGNMENT4"]=" 4"
D["SAL_TYPES_ALIGNMENT8"]=" 8"
D["HAVE_FEATURE_JUMBO_SHEETS"]=" 1"
D["ENABLE_RUNTIME_OPTIMIZATIONS"]=" 1"
D["HAVE_GCC_BUILTIN_ATOMIC"]=" 1"
D["HAVE_CXXABI_H_CXA_ALLOCATE_EXCEPTION"]=" 1"
D["HAVE_CXXABI_H_CXA_CURRENT_EXCEPTION_TYPE"]=" 1"
D["HAVE_CXXABI_H_CXA_THROW"]=" 1"
D["HAVE_LIBCPP"]=" 1"
D["HAVE_P1155R3"]=" 1"
D["HAVE_EXPORT_VALIDATION"]=" 1"
D["ENABLE_EOT"]=" 1"
D["WPS_VERSION_MAJOR"]=" 0"
D["WPS_VERSION_MINOR"]=" 4"
D["WPS_VERSION_MICRO"]=" 14"
D["MWAW_VERSION_MAJOR"]=" 0"
D["MWAW_VERSION_MINOR"]=" 3"
D["MWAW_VERSION_MICRO"]=" 21"
D["ETONYEK_VERSION_MAJOR"]=" 0"
D["ETONYEK_VERSION_MINOR"]=" 1"
D["ETONYEK_VERSION_MICRO"]=" 10"
D["EBOOK_VERSION_MAJOR"]=" 0"
D["EBOOK_VERSION_MINOR"]=" 1"
D["EBOOK_VERSION_MICRO"]=" 2"
D["STAROFFICE_VERSION_MAJOR"]=" 0"
D["STAROFFICE_VERSION_MINOR"]=" 0"
D["STAROFFICE_VERSION_MICRO"]=" 7"
D["PYTHON_VERSION_STRING"]=" L\"3.12.11\""
D["ENABLE_LIBRELOGO"]=" 1"
D["ENABLE_FIREBIRD_SDBC"]=" 1"
D["HAVE_FEATURE_NSS"]=" 1"
D["USE_TLS_NSS"]=" 1"
D["HAVE_FEATURE_CURL"]=" 1"
D["USE_CRYPTO_NSS"]=" 1"
D["ENABLE_ZXING"]=" 1"
D["HAVE_ZXING_TOSVG"]=" 1"
D["HAVE_FEATURE_OPENGL"]=" 1"
D["HAVE_FEATURE_OPENCL"]=" 1"
D["HAVE_FEATURE_PDFIMPORT"]=" 1"
D["HAVE_FEATURE_POPPLER"]=" 1"
D["ENABLE_PDFIMPORT"]=" 1"
D["HAVE_FEATURE_SKIA"]=" 1"
D["SK_GANESH"]=" 1"
D["SK_METAL"]=" 1"
D["HAVE_FEATURE_GPGME"]=" 1"
D["HAVE_MORE_FONTS"]=" 1"
D["ENABLE_EXTENSION_UPDATE"]=" 1"
D["WITH_LANG"]=" \"\""
D["WITH_LOCALE_ALL"]=" 1"
D["EXTRA_BUILDID"]=" \"\""
D["OOO_VENDOR"]=" \"micahroberson\""
D["GDRIVE_CLIENT_ID"]=" \"\""
D["GDRIVE_CLIENT_SECRET"]=" \"\""
D["ALFRESCO_CLOUD_CLIENT_ID"]=" \"\""
D["ALFRESCO_CLOUD_CLIENT_SECRET"]=" \"\""
D["ONEDRIVE_CLIENT_ID"]=" \"\""
D["ONEDRIVE_CLIENT_SECRET"]=" \"\""
D["HAVE_CPP_CONSTEVAL"]=" 1"
D["HAVE_CPP_STRONG_ORDER"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS  :L $CONFIG_LINKS  "
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
 ;;
  :L)
  #
  # CONFIG_LINK
  #

  if test "$ac_source" = "$ac_file" && test "$srcdir" = '.'; then
    :
  else
    # Prefer the file from the source tree if names are identical.
    if test "$ac_source" = "$ac_file" || test ! -r "$ac_source"; then
      ac_source=$srcdir/$ac_source
    fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: linking $ac_source to $ac_file" >&5
$as_echo "$as_me: linking $ac_source to $ac_file" >&6;}

    if test ! -r "$ac_source"; then
      as_fn_error $? "$ac_source: file not found" "$LINENO" 5
    fi
    rm -f "$ac_file"

    # Try a relative symlink, then a hard link, then a copy.
    case $ac_source in
    [\\/$]* | ?:[\\/]* ) ac_rel_source=$ac_source ;;
	*) ac_rel_source=$ac_top_build_prefix$ac_source ;;
    esac
    ln -s "$ac_rel_source" "$ac_file" 2>/dev/null ||
      ln "$ac_source" "$ac_file" 2>/dev/null ||
      cp -p "$ac_source" "$ac_file" ||
      as_fn_error $? "cannot link or copy $ac_source to $ac_file" "$LINENO" 5
  fi
 ;;

  esac


  case $ac_file$ac_mode in
    "config_host.mk":F)
    if test -n "$WSL_ONLY_AS_HELPER"; then
        sed -i -e 's#/mnt/\([[:alpha:]]\)/#\u\1:/#g' config_host.mk
    fi ;;
    "vs-code.code-workspace.template":F)
    if test -n "$WSL_ONLY_AS_HELPER"; then
        sed -i -e 's#/mnt/\([[:alpha:]]\)/#\u\1:/#g' \
               -e '/defaultProfile/s#Cygwin#Git Bash#' vs-code.code-workspace.template
    fi ;;

  esac
done # for ac_tag


as_fn_exit 0
